"""TEST

Revision ID: 8c74e5e61415
Revises: 1c48bbdad2a1
Create Date: 2025-03-30 09:49:16.736690

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8c74e5e61415'
down_revision: Union[str, None] = '1c48bbdad2a1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('gb_merged_api_gaps')
    op.drop_table('gtb_ttl_wh_2024_gaps')
    op.drop_table('gb_api_unifier_matched')
    op.drop_table('gtb_top20')
    op.drop_table('alembic_version')
    op.drop_table('takum_leonics_api_raw')
    op.drop_table('gb_gb_gaps')
    op.drop_table('gtb_2024_all_gbs_kwh')
    op.drop_table('gb_api_unifier_no_dups')
    op.drop_table('gtb_2024_gb_kwh_no_gaps')
    op.drop_table('gb_gb_unifier')
    op.drop_table('gtb_gb_unifier')
    op.drop_table('gb_top20')
    op.drop_index('idx_meter_ts', table_name='meter_readings')
    op.drop_index('idx_serial_num', table_name='meter_readings')
    op.drop_index('meter_readings_meter_ts_idx', table_name='meter_readings')
    op.drop_table('meter_readings')
    op.drop_table('gb_api_no_dups')
    op.drop_table('gb_gtb_merged_top20')
    op.drop_constraint('fk_device_site_history_station_id', 'device_site_history', type_='foreignkey')
    op.drop_constraint('fk_device_site_history_device_sn', 'device_site_history', type_='foreignkey')
    op.create_foreign_key(op.f('fk_device_site_history_device_sn'), 'device_site_history', 'devices', ['device_sn'], ['device_sn'], source_schema='solarman', referent_schema='solarman')
    op.create_foreign_key(op.f('fk_device_site_history_station_id'), 'device_site_history', 'stations', ['station_id'], ['id'], source_schema='solarman', referent_schema='solarman')
    op.drop_constraint('fk_inverter_data_device_sn', 'inverter_data', type_='foreignkey')
    op.create_foreign_key(op.f('fk_inverter_data_device_sn'), 'inverter_data', 'devices', ['device_sn'], ['device_sn'], source_schema='solarman', referent_schema='solarman')
    op.drop_index('idx_station_data_id', table_name='station_data_daily')
    op.drop_index('idx_station_data_ts', table_name='station_data_daily')
    op.create_index(op.f('idx_station_data_daily_station_id'), 'station_data_daily', ['station_id'], unique=False, schema='solarman')
    op.create_index(op.f('idx_station_data_daily_ts'), 'station_data_daily', ['ts'], unique=False, schema='solarman')
    op.drop_constraint('uq_station_name', 'stations', type_='unique')
    op.create_unique_constraint(op.f('unique_stations_name'), 'stations', ['name'], schema='solarman')
    op.drop_index('idx_weather_ts', table_name='weather')
    op.create_index(op.f('idx_weather_ts'), 'weather', ['ts'], unique=False, schema='solarman')
    op.drop_constraint('fk_weather_device_sn', 'weather', type_='foreignkey')
    op.drop_constraint('fk_weather_station_id', 'weather', type_='foreignkey')
    op.create_foreign_key(op.f('fk_weather_station_id'), 'weather', 'stations', ['station_id'], ['id'], source_schema='solarman', referent_schema='solarman')
    op.create_foreign_key(op.f('fk_weather_device_sn'), 'weather', 'devices', ['device_sn'], ['device_sn'], source_schema='solarman', referent_schema='solarman')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_weather_device_sn'), 'weather', schema='solarman', type_='foreignkey')
    op.drop_constraint(op.f('fk_weather_station_id'), 'weather', schema='solarman', type_='foreignkey')
    op.create_foreign_key('fk_weather_station_id', 'weather', 'stations', ['station_id'], ['id'])
    op.create_foreign_key('fk_weather_device_sn', 'weather', 'devices', ['device_sn'], ['device_sn'])
    op.drop_index(op.f('idx_weather_ts'), table_name='weather', schema='solarman')
    op.create_index('idx_weather_ts', 'weather', [sa.literal_column('ts DESC')], unique=False)
    op.drop_constraint(op.f('unique_stations_name'), 'stations', schema='solarman', type_='unique')
    op.create_unique_constraint('uq_station_name', 'stations', ['name'])
    op.drop_index(op.f('idx_station_data_daily_ts'), table_name='station_data_daily', schema='solarman')
    op.drop_index(op.f('idx_station_data_daily_station_id'), table_name='station_data_daily', schema='solarman')
    op.create_index('idx_station_data_ts', 'station_data_daily', ['ts'], unique=False)
    op.create_index('idx_station_data_id', 'station_data_daily', ['station_id'], unique=False)
    op.drop_constraint(op.f('fk_inverter_data_device_sn'), 'inverter_data', schema='solarman', type_='foreignkey')
    op.create_foreign_key('fk_inverter_data_device_sn', 'inverter_data', 'devices', ['device_sn'], ['device_sn'])
    op.drop_constraint(op.f('fk_device_site_history_station_id'), 'device_site_history', schema='solarman', type_='foreignkey')
    op.drop_constraint(op.f('fk_device_site_history_device_sn'), 'device_site_history', schema='solarman', type_='foreignkey')
    op.create_foreign_key('fk_device_site_history_device_sn', 'device_site_history', 'devices', ['device_sn'], ['device_sn'])
    op.create_foreign_key('fk_device_site_history_station_id', 'device_site_history', 'stations', ['station_id'], ['id'])
    op.create_table('gb_gtb_merged_top20',
    sa.Column('api_no_dups', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('site_label', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gb_serial', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_com', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('state', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gaps', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('epoch_secs', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('prev_epoch', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('diff_seconds', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('from_timestamp', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('to_timestamp', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('days', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('top20', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gateway_serial_no.', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('meter_serial_no.', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('building_code_(old)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('building_code_(new)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ins_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('region', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('office_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('transfered', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tag_number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('device_st.', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('off_days', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('comments', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('user_account', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dist_site_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('property_sub_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('property_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('energy_specialist', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('top_20', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ct_size', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('site_status_of_build', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gb_enrolled', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date_shipped', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date_delivered', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('installed', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date_installed', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('de_activation_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('replacement_in_case_of_faulty', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('meter_in_unifier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('emissions_factor_now', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('emissions_factor_form_the_list', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('emission_factor_was', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('focal_point', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dist_site_code2', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('user_account2', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('device_last_comm._date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('device_status', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('off_days2', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ticket_number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date_of_ticket_raised\nclosed_/_raised', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ticket_status', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('gb_api_no_dups',
    sa.Column('site_label', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gb_serial', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_com', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('state', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('meter_readings',
    sa.Column('serial_num', sa.TEXT(), autoincrement=False, nullable=False, comment='Unique identifier for the energy meter'),
    sa.Column('meter_ts', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False, comment='Timestamp of the meter reading (stored in UTC)'),
    sa.Column('wh', sa.NUMERIC(), autoincrement=False, nullable=True, comment='Energy consumption in watt-hours (Wh)'),
    sa.PrimaryKeyConstraint('serial_num', 'meter_ts', name='meter_readings_pkey'),
    comment='Stores energy meter readings with timestamps'
    )
    op.create_index('meter_readings_meter_ts_idx', 'meter_readings', [sa.literal_column('meter_ts DESC')], unique=False)
    op.create_index('idx_serial_num', 'meter_readings', ['serial_num'], unique=False)
    op.create_index('idx_meter_ts', 'meter_readings', [sa.literal_column('meter_ts DESC')], unique=False)
    op.create_table('gb_top20',
    sa.Column('gateway_serial_no.', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('meter_serial_no.', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('building_code_(old)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('building_code_(new)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ins_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('region', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('office_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('transfered', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tag_number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('device_st.', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('off_days', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('comments', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('user_account', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dist_site_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('property_sub_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('property_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('energy_specialist', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('top_20', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ct_size', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('site_status_of_build', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gb_enrolled', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date_shipped', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date_delivered', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('installed', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date_installed', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('de_activation_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('replacement_in_case_of_faulty', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('meter_in_unifier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('emissions_factor_now', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('emissions_factor_form_the_list', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('emission_factor_was', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('focal_point', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dist_site_code2', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('user_account2', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('device_last_comm._date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('device_status', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('off_days2', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ticket_number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date_of_ticket_raised\nclosed_/_raised', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ticket_status', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('gtb_gb_unifier',
    sa.Column('serial_number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('building_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('brand', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('installation_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('de_activation_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('activation_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('building_name', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('gb_gb_unifier',
    sa.Column('building_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('brand', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gauge_/_meter_uom', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('supplier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('model', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('asset_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('manufacturer', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('model.1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sensor_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('installation_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('serial_number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('latest_reading', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('asset_id', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('de_activation_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('activation_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('building_name', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('gtb_2024_gb_kwh_no_gaps',
    sa.Column('kwh_2024', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('gb_serial', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('gb_api_unifier_no_dups',
    sa.Column('unifier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('building_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('brand', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gauge_/_meter_uom', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('supplier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('model', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('asset_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('manufacturer', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('model.1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sensor_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('installation_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('serial_number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('latest_reading', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('asset_id', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('de_activation_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('activation_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('building_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('api_matched', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('deviceserial', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('matchedserial', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('score', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('site_label', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gb_serial', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_com', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('state', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('gtb_2024_all_gbs_kwh',
    sa.Column('table_(had_filled_gaps)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ttl_kwh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('kwh_2024', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gb_serial', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('unifier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('building_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('brand', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('installation_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('de_activation_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('activation_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('building_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('top20', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('emissions_factor_now', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('focal_point', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('building_code_(new)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ins_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('region', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('office_name', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('gb_gb_gaps',
    sa.Column('gb_serial', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('epoch_secs', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('prev_epoch', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('diff_seconds', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('from_timestamp', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('to_timestamp', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('days', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('takum_leonics_api_raw',
    sa.Column('datetimeserver', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('bdi1_power_p1_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi1_power_p2_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi1_power_p3_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi1_total_power_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi1_freq', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi1_acinput_voltage_l1', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi1_acinput_voltage_l2', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi1_acinput_voltage_l3', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi1_acinput_p1_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi1_acinput_p2_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi1_acinput_p3_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi1_acinput_total_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi1_batt_voltage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi1_today_supply_ac_kwh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi1_todate_supply_ac_kwh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi2_power_p1_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi2_power_p2_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi2_power_p3_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi2_total_power_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi2_freq', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi2_acinput_voltage_l1', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi2_acinput_voltage_l2', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi2_acinput_voltage_l3', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi2_acinput_p1_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi2_acinput_p2_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi2_acinput_p3_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi2_acinput_total_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi2_today_batt_chg_kwh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi2_todate_batt_chg_kwh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi2_today_batt_dischg_kwh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bdi2_todate_batt_dischg_kwh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('scc1_pv_voltage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('scc1_pv_current', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('scc1_pv_power_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('scc1_chg_voltage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('scc1_chg_current', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('scc1_chg_power_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('scc1_today_chg_kwh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('scc1_today_pv_kwh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('scc1_todate_chg_kwh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('scc1_todate_pv_kwh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('hvb1_avg_v', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('hvb1_batt_i', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('hvb1_soc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('loadpm_power_p1_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('loadpm_power_p2_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('loadpm_power_p3_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('loadpm_total_p_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('loadpm_import_kwh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('loadpm_today_import_kwh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_alternator_voltage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_alternator_current', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_alternator_power_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_loadbattery_voltage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_loadbattery_current', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_loadbattery_power_kw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_alternator_temp', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_diode_temp', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_max_voltage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_max_current', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_low_voltage_start', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_high_voltage_stop', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_low_current_stop', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_oil_pressure', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_coolant_temp', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_startingbatteryvoltage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_rpm', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_min_rpm', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_max_rpm', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_engine_runtime', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_ambient_temp', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_rpm_frequency', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_throttle_stop', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_fuel_level', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_total_kwh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dcgen_today_kwh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('flowmeter_fuel_temp', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('flowmeter_total_fuel_consumption', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('flowmeter_today_fuel_consumption', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('flowmeter_hourly_fuel_consumptionrate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ana1_inv_room_temp', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ana2_inv_room_rh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ana3_batt_room_temp', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ana4_batt_room_rh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ana5_fuel_level1', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ana6_fuel_level2', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('out1_closemc1', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('out2_startgen', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('out3_emergencystop', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('out4', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('out5', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('out6', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('out7', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('out8', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('in1_bdi_fail', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('in2_ats_status', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('in3_door_sw', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('in4', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('in5', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('in6', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('in7', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('in8', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('external_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('external_id', name='takum_leonics_api_raw_pkey'),
    sa.UniqueConstraint('datetimeserver', name='takum_leonics_api_raw_unique')
    )
    op.create_table('alembic_version',
    sa.Column('version_num', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version_num', name='alembic_version_pkc')
    )
    op.create_table('gtb_top20',
    sa.Column('meter_serial_no.', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('emissions_factor_now', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('focal_point', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('building_code_(new)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ins_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('region', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('office_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('emissions_factor_form_the_list', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('emission_factor_was', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('gb_api_unifier_matched',
    sa.Column('unifier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('building_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('brand', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gauge_/_meter_uom', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('supplier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('model', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('asset_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('manufacturer', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('model.1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sensor_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('installation_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('serial_number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('latest_reading', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('asset_id', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('de_activation_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('activation_date', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('building_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('api_matched', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('deviceserial', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('matchedserial', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('score', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('site_label', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gb_serial', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_com', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('state', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('gtb_ttl_wh_2024_gaps',
    sa.Column('table', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('wh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('wh_cleaned', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('wh_2024', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('wh_median', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('wh_ridge', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('wh_comp', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ridge___comp', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('unnamed:_9', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('kwh_cleaned', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ttl_kwh', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('diff', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ridge', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ridge_2024', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('diff.1', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('unnamed:_16', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('unnamed:_17', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('comp', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('comp_2024', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('diff.2', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('unnamed:_21', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('unnamed:_22', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('gb_merged_api_gaps',
    sa.Column('api_no_dups', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('site_label', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gb_serial', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_com', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('state', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gaps', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('epoch_secs', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('prev_epoch', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('diff_seconds', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('from_timestamp', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('to_timestamp', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('days', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('top20', sa.TEXT(), autoincrement=False, nullable=True)
    )
    # ### end Alembic commands ###
